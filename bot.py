#! /usr/bin/env python
# -*- coding: utf-8 -*-
import tempfile
from telebot import types
import telebot
from zipfile import ZipFile
import logging
from PIL import Image
import pytesseract
import cv2
import os


API_TOKEN = '585299899:AAGxkkmOKgJY8t8wYUyLgaAwQtuu95FT0B4'

dic = {'–ê': 'A', '–∞': 'a', '”ò': '√Å', '”ô': '√°', '–ë': 'B', '–±': 'b', '–î': 'D', '–¥': 'd', '–ï': 'E', '–µ': 'e',
       '–§': 'F', '—Ñ': 'f', '“í': '«¥', '“ì': '«µ', '–ì': 'G', '–≥': 'g', '–•': 'H', '—Ö': 'h', '–Ü': 'I', '—ñ': 'i',
       '–ò': 'I', '–∏': 'ƒ±', '–ô': 'I', '–π': 'ƒ±', '“∫': 'H', '“ª': 'h', '–ñ': 'J', '–∂': 'j', '–ö': 'K', '–∫': 'k',
       '–õ': 'L', '–ª': 'l', '–ú': 'M', '–º': 'm', '–ù': 'N', '–Ω': 'n', '“¢': '≈É', '“£': '≈Ñ', '–û': 'O', '–æ': 'o',
       '”®': '√ì', '”©': '√≥', '–ü': 'P', '–ø': 'p', '“ö': 'Q', '“õ': 'q', '–†': 'R', '—Ä': 'r', '–®': 'Sh', '—à': 'sh',
       '–°': 'S', '—Å': 's', '–¢': 'T', '—Ç': 't', '“∞': 'U', '“±': 'u', '“Æ': '√ö', '“Ø': '√∫', '–í': 'V', '–≤': 'v',
       '–´': 'Y', '—ã': 'y', '–£': '√ù', '—É': '√Ω', '–ó': 'Z', '–∑': 'z', '–ß': 'Ch', '—á': 'ch', '–≠': 'E', '—ç': 'e',
       '–©': '', '—â': '', '–¨': '', '—å': '', '–™': '', '—ä': '', '–Ø': 'Ia', '—è': 'ia', '–¶': 'Ts', '—Ü': 'ts'}

alphabet = ['–ê', '–∞', '”ò', '”ô', '–ë', '–±', '–î', '–¥', '–ï', '–µ', '–§', '—Ñ', '“í', '“ì', '–ì', '–≥', '–•', '—Ö',
            '–Ü', '—ñ', '–ò', '–∏', '–ô', '–π', '“∫', '“ª', '–ñ', '–∂', '–ö', '–∫', '–õ', '–ª', '–ú', '–º', '–ù', '–Ω',
            '“¢', '“£', '–û', '–æ', '”®', '”©', '–ü', '–ø', '“ö', '“õ', '–†', '—Ä', '–®', '—à', '–°', '—Å', '–¢', '—Ç',
            '“∞', '“±', '“Æ', '“Ø', '–í', '–≤', '–´', '—ã', '–£', '—É', '–ó', '–∑', '–ß', '—á', '–≠', '—ç', '–©', '—â',
            '–¨', '—å', '–™', '—ä', '–Ø', '—è', '–¶', '—Ü']

preprocess = "thresh"
bot = telebot.TeleBot(API_TOKEN)
logger = telebot.logger
telebot.logger.setLevel(logging.DEBUG)
@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*[types.KeyboardButton(name) for name in ['üìñ –ü–æ–º–æ—â—å', '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏']])
    bot.send_message(message.chat.id, '*‚ú® –ü—Ä–∏–≤–µ—Ç, ' + message.chat.first_name + '!*', parse_mode='Markdown', reply_markup=keyboard)
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['‚ùì –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?']])
    bot.send_message(message.chat.id,'*–° –ø–æ–º–æ—â—å—é, –í—ã –º–æ–∂–µ—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç, –¥–æ–∫—É–º–µ–Ω—Ç—ã, –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–∞ –∫–∞–∑–∞—Ö—Å–∫—É—é –ª–∞—Ç–∏–Ω–∏—Ü—É*',
                     parse_mode='Markdown', reply_markup=keyboard)



@bot.message_handler(func=lambda message: True, content_types=['text'])
def latin(message):
    textcyr = message.text
    st = str(textcyr)
    resultx = str()

    len_st = len(st)
    for i in range(0, len_st):
        if st[i] in alphabet:
            simb = dic[st[i]]
        else:
            simb = st[i]
        resultx = resultx + simb
    bot.send_message(message.chat.id, resultx)


@bot.message_handler(content_types=['document'])
def handle_docs_photo(message):
    try:
        chat_id = message.chat.id
        file_info = bot.get_file(message.document.file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        bot.send_message(message.chat.id, 'üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –∏–¥–µ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –ª–∞—Ç–∏–Ω–∏—Ü—É...')
        src='~/telebot/telebot_kaz/docx/'+message.document.file_name;
        with open(src, 'wb') as new_file:
          new_file.write(downloaded_file)
        bot.send_message(message.chat.id,'üíæ –ò—Å—Ö–æ–¥–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ' + format(os.path.getsize(src) / 1024 / 1024, '.2f') + 'Mb')
        with tempfile.TemporaryDirectory(prefix='my-encoder-') as tempdir:
            # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É.
            doc_x = ZipFile(src)
            doc_x.extractall(tempdir)
            doc_x.close()

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞, —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ —Ç–µ–∫—Å—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞, –∫–∞–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ.
            doc_xml = open(os.path.join(tempdir, 'word', 'document.xml'))
            new_xml = ''

            for line in doc_xml:
                for char in line:
                    if char in dic.keys():
                        new_xml += dic[char]
                    else:
                        new_xml += char
                new_xml += '\n'

            doc_xml.close()

            # –ó–∞–ø–∏—Å—å –Ω–æ–≤–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ.
            doc_xml = open(os.path.join(tempdir, 'word', 'document.xml'), mode='w')
            doc_xml.write(new_xml)
            doc_xml.close()

            # –°–±–æ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞.
            doc2_x = ZipFile(message.document.file_name, mode='w')
            for root, dirs, files in os.walk(tempdir):
                for file in files:
                    abs_path = os.path.join(root, file)
                    rel_path = os.path.relpath(os.path.join(root, file), tempdir)
                    doc2_x.write(abs_path, rel_path)


            doc2_x.close()
            doc = open(message.document.file_name, 'rb')
            bot.send_document(chat_id,doc)
            bot.send_message(message.chat.id,'üíæ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ' + format(os.path.getsize(message.document.file_name) / 1024 / 1024, '.2f') + 'Mb')
            os.remove(src)
            os.remove(message.document.file_name)
            #bot.send_document(message.chat.id, src)


    except Exception as e:
        bot.send_message(message.chat.id, e)


@bot.message_handler(content_types=['photo'])
def handle_docs_photo(message):
    try:

        file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        bot.send_message(message.chat.id,'üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –∏–¥–µ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –ª–∞—Ç–∏–Ω–∏—Ü—É...')
        src = '~/telebot/telebot_kaz/img/' + file_info.file_path;
        image = src
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
            image = cv2.imread(image)
            gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
            if preprocess == "thresh":
                gray = cv2.threshold(gray, 0, 255,
                                     cv2.THRESH_BINARY | cv2.THRESH_OTSU)[1]
            elif preprocess == "blur":
                gray = cv2.medianBlur(gray, 3)
            filename = "{}.png".format(os.getpid())
            cv2.imwrite(filename, gray)
            lines = pytesseract.image_to_string(Image.open(src), lang='kaz')
            os.remove(filename)
            os.remove(src)
            for line in lines:
                lat = (''.join([dic.get(char, char) for char in lines]))
        bot.send_message(message.chat.id,'üìã –¢–µ–∫—Å—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:')
        bot.send_message(message.chat.id, lat)

    except Exception as e:
        bot.send_message(message.chat.id, e)


@bot.callback_query_handler(func=lambda call: call.data)  # func=lambda call:True
def inline(call):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['–°–ª–µ–¥—É—é—â–∏–π >>']])
    if call.data == '‚ùì –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='*üìñ –ü–æ–º–æ—â—å (1 –∏–∑ 3)* \n'
                                                                                                     '\n'
                                                                                                     '–î–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –í–∞—à–µ–≥–æ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –ª–∞—Ç–∏–Ω—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç –∫–∞–∑–∞—Ö—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –í–∞—à–∏–º —Ç–µ–∫—Å—Ç–æ–º –±–æ—Ç—É',
                              parse_mode='Markdown',reply_markup=keyboard)
    keyboard2 = types.InlineKeyboardMarkup()
    keyboard2.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['<< –ü—Ä–µ–¥—ã–¥—É—â–∏–π', '–°–ª–µ–¥—É—é—â–∏–π >> ']])
    if call.data == '–°–ª–µ–¥—É—é—â–∏–π >>':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='*üìñ –ü–æ–º–æ—â—å (2 –∏–∑ 3)* \n'
                                                                                                     '\n'
                                                                                                     '–î–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–∞ –ª–∞—Ç–∏–Ω—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç –∫–∞–∑–∞—Ö—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –í–∞—à –¥–æ–∫—É–º–µ–Ω—Ç –±–æ—Ç—É \n'
                                                                                                     '\n'
                                                                                                     '*–í–Ω–∏–º–∞–Ω–∏–µ!* –ë–æ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è docx, —Å –¥—Ä—É–≥–∏–º–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏ –±–æ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ –±—É–¥–µ—Ç',
                              parse_mode='Markdown', reply_markup=keyboard2)
    if call.data == '<< –ü—Ä–µ–¥—ã–¥—É—â–∏–π':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='*üìñ –ü–æ–º–æ—â—å (1 –∏–∑ 3)* \n'
                                   '\n'
                                   '–î–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –í–∞—à–µ–≥–æ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –ª–∞—Ç–∏–Ω—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç –∫–∞–∑–∞—Ö—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –í–∞—à–∏–º —Ç–µ–∫—Å—Ç–æ–º –±–æ—Ç—É',
                              parse_mode='Markdown', reply_markup=keyboard)
    keyboard3 = types.InlineKeyboardMarkup()
    keyboard3.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['<< –ü—Ä–µ–¥—ã–¥—É—â–∏–π ']])
    if call.data == '–°–ª–µ–¥—É—é—â–∏–π >> ':
        bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id, text='*üìñ –ü–æ–º–æ—â—å (3 –∏–∑ 3)* \n'
                                                                                                     '\n'
                                                                                                     '–î–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ —Å –í–∞—à–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–æ—Ç—É\n'
                                                                                                    '\n'
                                                                                                    '*–í–Ω–∏–º–∞–Ω–∏–µ!* –ß–µ–º –≤—ã—à–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, —Ç–µ–º –ª—É—á—à–µ —Ä–∞—Å–ø–æ–∑–Ω–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', parse_mode='Markdown', reply_markup=keyboard3)


    if call.data == '<< –ü—Ä–µ–¥—ã–¥—É—â–∏–π ':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='*üìñ –ü–æ–º–æ—â—å (2 –∏–∑ 3)* \n'
                                   '\n'
                                   '–î–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–∞ –ª–∞—Ç–∏–Ω—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç –∫–∞–∑–∞—Ö—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –í–∞—à –¥–æ–∫—É–º–µ–Ω—Ç –±–æ—Ç—É \n'
                                   '\n'
                                   '*–í–Ω–∏–º–∞–Ω–∏–µ!* –ë–æ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è docx, —Å –¥—Ä—É–≥–∏–º–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏ –±–æ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ –±—É–¥–µ—Ç',
                              parse_mode='Markdown', reply_markup=keyboard2)
    if call.data == '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏':
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ /doc', parse_mode='Markdown')




bot.polling(none_stop=True, interval=0, timeout=3)
